{"attributes": {"name": "HasMany", "packageName": "guaraiba.orm.relations", "mixins": "guaraiba.utils.MInflection", "superClass": "qx.core.Object", "fullName": "guaraiba.orm.relations.HasMany", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>This class offers the basic features and properties to create HasMany relations.</p>"}, "type": "desc"}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 29, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "currentRecord"}, "type": "param", "children": [{"attributes": {"text": "<p>Current record instance.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "guaraiba.orm.Record"}, "type": "entry"}]}]}, {"attributes": {"name": "foreignModel"}, "type": "param", "children": [{"attributes": {"text": "<p>Instance of foreign model to relate to the current record.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "guaraiba.orm.Model"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "foreignKey"}, "type": "param", "children": [{"attributes": {"text": "<p>Foreign key name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Declare hasMany relation</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 72, "name": "all"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Ex: {where: { key: val, key2: {gt: &#8216;val2&#8217;}, limit: {Number}, offset: {Number} }</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, records) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Find all instances of Model, matched by query\nmake sure you have marked as `index: true` fields for filter or sort</p>"}, "type": "desc"}]}, {"attributes": {"line": 165, "name": "count"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "conditions"}, "type": "param", "children": [{"attributes": {"text": "<p>Search conditions: {name: &#8216;me&#8217;, age: {gt: 20}}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, count) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Return count of matched records</p>"}, "type": "desc"}]}, {"attributes": {"line": 185, "name": "create"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>object to create.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, record) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Create new instance of Model class, saved in database</p>"}, "type": "desc"}]}, {"attributes": {"line": 229, "name": "destroyAll"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with one argument Ex: function(err) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Destroy all records</p>"}, "type": "desc"}]}, {"attributes": {"line": 110, "name": "find"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "id"}, "type": "param", "children": [{"attributes": {"text": "<p>Identifier of object (primary key value)</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, record) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Find object by id</p>"}, "type": "desc"}]}, {"attributes": {"line": 121, "name": "findOne"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Search conditions: {where: {name: &#8216;me&#8217;, age: {gt: 20}}}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, record) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Find one record, same as `all`, limited by 1 and return object, not collection</p>"}, "type": "desc"}]}, {"attributes": {"line": 200, "name": "findOrCreate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Search conditions: {where: {name: &#8216;me&#8217;, age: {gt: 20}}}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>object to create.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, record) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Find one record, same as `all`, limited by 1 and return object, not collection,\nif not found, create using data provided as second argument</p>"}, "type": "desc"}]}, {"attributes": {"name": "getCurrentRecord", "fromProperty": "currentRecord"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>currentRecord</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #currentRecord}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>currentRecord</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getForeignKey", "fromProperty": "foreignKey"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>foreignKey</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #foreignKey}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>foreignKey</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getForeignModel", "fromProperty": "foreignModel"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>foreignModel</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #foreignModel}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>foreignModel</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initCurrentRecord", "fromProperty": "currentRecord"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>currentRecord</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>currentRecord</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #currentRecord}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initForeignKey", "fromProperty": "foreignKey"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>foreignKey</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>foreignKey</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #foreignKey}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initForeignModel", "fromProperty": "foreignModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>foreignModel</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>foreignModel</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #foreignModel}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 144, "name": "iterate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Query conditions. Same as for `all` may contain optional member `batchSize` to specify size of batch loaded from db.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "iterator"}, "type": "param", "children": [{"attributes": {"text": "<p>Iterator function with two argument called on each obj. Ex: function(record, next) {...}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with one argument Ex: function(err) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Iterate through dataset and perform async method iterator. This method\ndesigned to work with large datasets loading data by batches.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetCurrentRecord", "fromProperty": "currentRecord"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>currentRecord</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #currentRecord}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetForeignKey", "fromProperty": "foreignKey"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>foreignKey</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #foreignKey}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetForeignModel", "fromProperty": "foreignModel"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>foreignModel</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #foreignModel}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setCurrentRecord", "fromProperty": "currentRecord"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>currentRecord</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>currentRecord</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #currentRecord}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setForeignKey", "fromProperty": "foreignKey"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>foreignKey</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>foreignKey</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #foreignKey}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setForeignModel", "fromProperty": "foreignModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>foreignModel</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>foreignModel</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #foreignModel}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 93, "name": "update"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Ex: { where:{uid:&#8216;10&#8217;}, update:{ Name:&#8216;New name&#8217; } }</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, record) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Updates the respective record</p>"}, "type": "desc"}]}, {"attributes": {"line": 217, "name": "updateOrCreate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "data"}, "type": "param", "children": [{"attributes": {"text": "<p>object to update or create.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, record) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Update or create record.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"check": "guaraiba.orm.Record", "name": "currentRecord", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Reference to instance of current record.</p>"}, "type": "desc"}]}, {"attributes": {"check": "String", "name": "foreignKey", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Name of foreign key.</p>"}, "type": "desc"}]}, {"attributes": {"check": "guaraiba.orm.Model", "name": "foreignModel", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Reference to instance of model of current record.</p>"}, "type": "desc"}]}]}]}