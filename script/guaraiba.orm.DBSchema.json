{"attributes": {"name": "DBSchema", "packageName": "guaraiba.orm", "mixins": "guaraiba.utils.MInflection", "superClass": "qx.core.Object", "fullName": "guaraiba.orm.DBSchema", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>This class offers the basic features and properties to create database schema.</p>\n\n<p>This class required knex modules.</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods-static", "children": [{"attributes": {"line": 47, "isStatic": true, "name": "Boolean"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "v"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Type for define orm record field and check property value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if type of parameter value is a Boolean. If caller without parameters then returns &#8216;Boolean&#8217; as type name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 103, "isStatic": true, "name": "Character"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "v"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Type for define orm record field and check property value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if type of parameter value is a Character. If caller without parameters then returns &#8216;Character&#8217; as type name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 77, "isStatic": true, "name": "Date"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "v"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Type for define orm record field and check property value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if type of parameter value is a Date. If caller without parameters then returns &#8216;Date&#8217; as type name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 142, "isStatic": true, "name": "Float"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "v"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Type for define orm record field and check property value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if type of parameter value is a Float. If caller without parameters then returns &#8216;Float&#8217; as type name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 116, "isStatic": true, "name": "Integer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "v"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Type for define orm record field and check property value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if type of parameter value is a Integer. If caller without parameters then returns &#8216;Integer&#8217; as type name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 64, "isStatic": true, "name": "Number"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "v"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Type for define orm record field and check property value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if type of parameter value is a Number. If caller without parameters then returns &#8216;Number&#8217; as type name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 129, "isStatic": true, "name": "Serial"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "v"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Type for define orm record field and check property value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if type of parameter value is a Serial. If caller without parameters then returns &#8216;Serial&#8217; as type name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 34, "isStatic": true, "name": "String"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "v"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Type for define orm record field and check property value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if type of parameter value is a String. If caller without parameters then returns &#8216;String&#8217; as type name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 90, "isStatic": true, "name": "Text"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "v"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Type for define orm record field and check property value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Returns true if type of parameter value is a Text. If caller without parameters then returns &#8216;Text&#8217; as type name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 164, "isCtor": true, "overriddenFrom": "qx.core.Object", "name": "ctor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of datebase schema.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "knexSetting"}, "type": "param", "children": [{"attributes": {"text": "<p>Knex connection settings.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "jdbcSettings"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">JDBC</span> connection settings. Knex connection settings has the following keys: <table> <tr><th>Name</th><th>Type</th><th>Description</th></tr> <tr><th>client</th><td>String</td><td>Any client suported by knex molule. Ex: (&#8216;pg&#8217;, &#8216;mysql&#8217;, &#8216;mariasql&#8217;, &#8216;sqlite3&#8217; ...).</td></tr> <tr><th>connection</th><td>String</td><td>Connection string setting. Ex: &#8216;postgres://user:<a href=\"mailto:passwd@127.0.0.1\">passwd@127.0.0.1</a>:5432/dbName&#8217;. </td></tr> <tr><th>debug</th><td>Boolean</td><td>Debug query execution.</td></tr> </table></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Constructor</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"line": 296, "name": "createQueryBuilder"}, "type": "method", "children": [{"attributes": {"text": "<p>Create query builder.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "guaraiba.orm.QueryBuilder"}, "type": "entry"}]}]}]}, {"attributes": {"line": 414, "name": "driverSettings"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "driver"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Configures the driver to access the database.</p>\n\n<p>This method is empty and must be overridden in child classes.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getDebug", "fromProperty": "debug"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>debug</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #debug}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>debug</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getJdbcSettings", "fromProperty": "jdbcSettings"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>jdbcSettings</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #jdbcSettings}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>jdbcSettings</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 305, "name": "getKNex"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns KNex connection instance.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "KNex"}, "type": "entry"}]}]}]}, {"attributes": {"line": 264, "name": "getModel"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of model class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "optional": true, "name": "throwUndefined"}, "type": "param", "children": [{"attributes": {"text": "<p>Throw exception if model is not defiened.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get model instance.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getModelPrefixName", "fromProperty": "modelPrefixName"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>modelPrefixName</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #modelPrefixName}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>modelPrefixName</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 287, "name": "getModels"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns models collection class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getName", "fromProperty": "name"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>name</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #name}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>name</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 353, "name": "getRecordPropertyTransform"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "checkFunc"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns name of transform method to given check function.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Name of transform method.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"line": 343, "name": "getTransaction"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns current transaction.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>KNext transaction.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"line": 397, "name": "hasTable"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Table name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, exists) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": ""}, "type": "desc"}]}, {"attributes": {"line": 228, "name": "init"}, "type": "method", "children": [{"attributes": {"text": "<p>Initialize data base schemas of demo application.</p>\n\n<p>This method is called immediately after construction of the schemes and\nin this must be registered each of the model classes.</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "name": "initDebug", "fromProperty": "debug"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>debug</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>debug</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #debug}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initJdbcSettings", "fromProperty": "jdbcSettings"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>jdbcSettings</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>jdbcSettings</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #jdbcSettings}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initModelPrefixName", "fromProperty": "modelPrefixName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>modelPrefixName</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>modelPrefixName</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #modelPrefixName}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initName", "fromProperty": "name"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>name</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>name</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #name}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isDebug", "fromProperty": "debug"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>debug</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #debug}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 363, "name": "isTransaction"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns true if transaction is started.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 375, "name": "query"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "sql"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">SQL</span> query string.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "params"}, "type": "param", "children": [{"attributes": {"text": "<p>Parameters pased to query.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "callback"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function with two argument Ex: function(err, result) {...}</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"optional": true, "name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback function scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Excecute custom query.</p>"}, "type": "desc"}]}, {"attributes": {"line": 238, "name": "register"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "recordClass"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Register record class in this database schema.\nThis action define new basic model from record class.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "guaraiba.orm.Model"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetDebug", "fromProperty": "debug"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>debug</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #debug}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetJdbcSettings", "fromProperty": "jdbcSettings"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>jdbcSettings</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #jdbcSettings}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetModelPrefixName", "fromProperty": "modelPrefixName"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>modelPrefixName</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #modelPrefixName}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetName", "fromProperty": "name"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>name</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #name}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setDebug", "fromProperty": "debug"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>debug</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>debug</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #debug}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setJdbcSettings", "fromProperty": "jdbcSettings"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>jdbcSettings</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>jdbcSettings</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #jdbcSettings}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setModelPrefixName", "fromProperty": "modelPrefixName"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>modelPrefixName</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>modelPrefixName</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #modelPrefixName}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setName", "fromProperty": "name"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>name</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>name</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #name}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleDebug", "fromProperty": "debug"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>debug</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #debug}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"line": 318, "name": "transaction"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "prepareCallback"}, "type": "param", "children": [{"attributes": {"text": "<p>Function where will be preparing the transaction body. Ex: function(schema, commit, rollback) { ... }</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "commitCallback"}, "type": "param", "children": [{"attributes": {"text": "<p>Function to will be call after commit.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "rollbackCallback"}, "type": "param", "children": [{"attributes": {"text": "<p>Function to will be call after rollback.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "scope"}, "type": "param", "children": [{"attributes": {"text": "<p>Callback functions scope.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Begin new transaction.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"defaultValue": "false", "propertyType": "new", "check": "Boolean", "name": "debug"}, "type": "property", "children": [{"attributes": {"text": "<p>Enable or disable the debug option.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "propertyType": "new", "check": "Object", "name": "jdbcSettings"}, "type": "property", "children": [{"attributes": {"text": "<p>Setting to connect to database using jdbc driver.</p>"}, "type": "desc"}]}, {"attributes": {"defaultValue": "\"\"", "propertyType": "new", "check": "String", "name": "modelPrefixName"}, "type": "property", "children": [{"attributes": {"text": "<p>Model name prefix used in getModel method.</p>"}, "type": "desc"}]}, {"attributes": {"propertyType": "new", "check": "String", "name": "name"}, "type": "property", "children": [{"attributes": {"text": "<p>Database schema identification name.</p>"}, "type": "desc"}]}]}]}