{"attributes": {"fullName": "guaraiba.controllers.MResponder", "packageName": "guaraiba.controllers", "type": "mixin", "name": "MResponder", "includer": "guaraiba.Controller"}, "type": "class", "children": [{"attributes": {"text": "<p>Provides strategies for responding based on desired format.\nA responder determines the best way to respond to a request</p>"}, "type": "desc"}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "internal", "isInternal": true, "line": 91, "isMixin": true, "name": "__calculateFormatAndContentType"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"optional": true, "name": "formatOverride"}, "type": "param", "children": [{"attributes": {"text": "<p>Format to used and overwriting the request format.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get format and content type acceptable to all parties.\nSee if any format formats match the accept header.\nControllers should at least one format with a valid contentType.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>- Format and content type (e.g: {format: json, contentType: &#8216;application/json&#8217;})</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 71, "isMixin": true, "name": "_transformLayout"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "layout"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Transform value of layout property and determine the real layout path.\nGets created programmatically based on controller name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Absolute path to layout resource.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "line": 48, "isMixin": true, "name": "_transformTemplate"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "template"}, "type": "param", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Transform value of template property and determine the real template path.\nGets created programmatically based on controller name.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Absolute path to template resource.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"line": 128, "isMixin": true, "name": "getHelpers"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns helpers methods.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLayout", "fromProperty": "layout"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>layout</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #layout}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>layout</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTemplate", "fromProperty": "template"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>template</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #template}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>template</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLayout", "fromProperty": "layout"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>layout</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>layout</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #layout}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTemplate", "fromProperty": "template"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>template</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>template</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #template}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"line": 235, "isMixin": true, "name": "output"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "statusCode"}, "type": "param", "children": [{"attributes": {"text": "<p>Either an <span class=\"caps\">URL</span>, or an object literal containing controller/action/format attributes to base the redirect on.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}, {"attributes": {"name": "headers"}, "type": "param", "children": [{"attributes": {"text": "<p><span class=\"caps\">HTTP</span> headers to include in the response</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "content"}, "type": "param", "children": [{"attributes": {"text": "<p>The response-body</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Lowest-level response function, actually outputs the response</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetLayout", "fromProperty": "layout"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>layout</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #layout}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTemplate", "fromProperty": "template"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>template</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #template}.</p>"}, "type": "desc"}]}, {"attributes": {"line": 160, "isMixin": true, "name": "respond"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "content"}, "type": "param", "children": [{"attributes": {"text": "<p>The content to use in the response.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}, {"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "optional": true, "name": "options"}, "type": "param", "children": [{"attributes": {"text": "<p>Respond options. The options map has the following keys: <table> <tr><th>Name</th><th>Type</th><th>Description</th></tr> <tr><th>format</th><td>String</td><td>The desired format for the response.</td></tr> <tr><th>template</th><td>String</td><td>The path (without file extensions) to the template to use to render this response.</td></tr> <tr><th>layout</th><td>String</td><td>The path (without file extensions) to the layout to use to render the template for this response.</td></tr> <tr><th>statusCode</th><td>Number</td><td>The <span class=\"caps\">HTTP</span> status-code to use for the response.</td></tr> <tr><th>status</th><td>String|Object</td><td>The desired flash message, can be a string or an errors hash.</td></tr> <tr><th>silent</th><td>Boolean</td><td>Disables flash messages if set to true.</td></tr> </table></p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Performs content-negotiation, and renders a response.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": ""}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLayout", "fromProperty": "layout"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>layout</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>layout</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #layout}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTemplate", "fromProperty": "template"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>template</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>template</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #template}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"allowNull": "true", "propertyType": "new", "isMixin": true, "check": "String", "name": "layout"}, "type": "property", "children": [{"attributes": {"text": "<p>Path to layout.</p>"}, "type": "desc"}]}, {"attributes": {"allowNull": "true", "propertyType": "new", "isMixin": true, "check": "String", "name": "template"}, "type": "property", "children": [{"attributes": {"text": "<p>Path to template.</p>"}, "type": "desc"}]}]}]}